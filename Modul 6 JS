Создать объект, описывающий прямоугольник (хранит координаты левой верхней и правой нижней точек), и написать следующие функции для работы с таким объектом.

1. Функция принимает объект-прямоугольник и выводит информацию о нем (где какая точка расположена).
let rectangle = {
	a: { x: 1, y: 3 },
	d: { x: 5, y: 1 }, 
  b: function() {
  	return {
    	x: this.d.x,
      y: this.a.y
    }
  },
  c: function(){
 	 return {
		  x: this.a.x,
		  y: this.d.y 
 	 }
     }
}

функция принимает rectangle и выводит координаты всех точек в след. порядке :
 1 ) x = 1, y = 3


let rectangle = {
	a: { x: 1, y: 3 },
	d: { x: 5, y: 1 }, 
  b: function b() {
  	return {
    	x: this.d.x,
      y: this.a.y
    }
  },
  c: function c(){
 	 return {
		  x: this.a.x,
		  y: this.d.y 
 	 }
     }
}

function showRectangle(rectangle) {                                   //объявление функции, которая принимает объект
  let result = ""                                                     //объявление переменной, для сохранения значений объекта
  for(let key in rectangle){                                          //цикл-перебор значений объекта
    if (typeof rectangle[key] == "object"){                           //если ключ является объектом, то 
      result += `X=${rectangle[key].x} Y=${rectangle[key].y}\n`       //сохранить в переменную рresult значения объекта
    }else{																														//иначе 
      result += `X=${rectangle[key]().x} Y=${rectangle[key]().y}\n`   //сохранить значения функции
    }
  }
  return result;                                                      //вернуть переменную result
}
alert(showRectangle(rectangle));

ИЛИ

let rectangle = {
	a: { x: 1, y: 3 },
	d: { x: 5, y: 1 }, 
  b: function b() {
  	return {
    	x: this.d.x,
      y: this.a.y
    }
  },
  c: function c(){
 	 return {
		  x: this.a.x,
		  y: this.d.y 
 	 }
     }
}

function showRectangle(rectangle) {
let result = ""
for (const [key, value] of Object.entries(rectangle)) {
  if (typeof rectangle[key] == "object"){
      result += `X=${rectangle[key].x} Y=${rectangle[key].y}\n`
    }else{
      result += `X=${rectangle[key]().x} Y=${rectangle[key]().y}\n`
    }
}
 return result;
}

alert(showRectangle(rectangle));


2. Функция принимает объект-прямоугольник и возвращает его ширину.
function widthRectangle(rectangle){                                   // CD     1.1/5.1 
let width =  rectangle.d.x - rectangle.c().x;
alert (width);
}

alert(widthRectangle(rectangle)); 

3. Функция принимает объект-прямоугольник и возвращает его высоту.
function heightRectangle(rectangle){                                   // CD     1.1/5.1 
let height =  rectangle.a.y - rectangle.c().y;
alert (height);
}

alert(heightRectangle(rectangle));  

4. Функция принимает объект-прямоугольник и возвращает его площадь.
function areaRectangle(rectangle){                                   
return widthRectangle(rectangle) * heightRectangle(rectangle);   
}

alert(areaRectangle(rectangle));

5. Функция принимает объект-прямоугольник и возвращает его периметр.
function perimetrRectangle(rectangle){                                
	return (widthRectangle(rectangle) + heightRectangle(rectangle))*2;
}
alert(perimetrRectangle(rectangle));

6. Функция изменения ширины прямоугольника. Она принимает объект-прямоугольник и на сколько единиц изменить ширину.
function EditWidthRectangle(rectangle, edit){                            //3                  
	return widthRectangle(rectangle) - edit;
}
alert(EditWidthRectangle(rectangle,2));

Добавить все в объект

rectangle.width = widthRectangle(rectangle);
rectangle.height = heightRectangle(rectangle);
rectangle.perimetr = perimetrRectangle(rectangle);
rectangle.area = areaRectangle(rectangle);

console.log(rectangle);

7. Функция изменения высоты прямоугольника. Она принимает объект-прямоугольник и на сколько единиц изменить высоту.
function EditheightRectangle(rectangle, edit){                            //1                 
	return heightRectangle(rectangle) - edit;
}
alert(EditheightRectangle(rectangle,1));

8. Функция изменения ширины и высоты прямоугольника. Она принимает объект-прямоугольник и два значения – для изменения ширины и высоты.
